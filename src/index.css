/* Global Imports */
@import url('https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;500;600;700&family=Crimson+Text:wght@400;600&display=swap');

/* CSS Custom Properties are imported from globals.css */

/* Global Focus Management */
.keyboard-navigation *:focus {
  outline: 3px solid var(--autumn-orange) !important;
  outline-offset: 2px;
}

/* Remove focus styles when not using keyboard */
.mouse-navigation *:focus {
  outline: none;
}

/* Custom Scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: var(--cream);
}

::-webkit-scrollbar-thumb {
  background: var(--autumn-orange);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--deep-orange);
}

/* Selection Styles */
::selection {
  background: var(--autumn-orange);
  color: white;
}

::-moz-selection {
  background: var(--autumn-orange);
  color: white;
}

/* Remove tap highlight on mobile */
* {
  -webkit-tap-highlight-color: transparent;
}

/* Ensure consistent box-sizing */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margins and padding */
* {
  margin: 0;
  padding: 0;
}

/* Improve text rendering */
body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
}

/* Make images responsive by default */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
  height: auto;
}

/* Remove built-in form typography styles */
input,
button,
textarea,
select {
  font: inherit;
}

/* Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
  hyphens: auto;
}

/* Create a root stacking context */
#root {
  isolation: isolate;
}

/* Ensure minimum height for main content */
#root {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

.App {
  flex: 1;
}

/* Skip to main content link */
.skip-to-main {
  position: absolute;
  top: -40px;
  left: 6px;
  background: var(--autumn-orange);
  color: white;
  padding: 8px;
  z-index: 1000;
  text-decoration: none;
  border-radius: 4px;
  font-weight: 600;
}

.skip-to-main:focus {
  top: 6px;
}

/* Ensure proper spacing for main content when header is fixed */
main {
  margin-top: 80px; /* Adjust based on header height */
}

/* Loading state for lazy-loaded components */
.lazy-loading {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 200px;
  font-size: 1.2rem;
  color: var(--autumn-orange);
}

/* Error boundary styles */
.error-boundary {
  padding: 2rem;
  text-align: center;
  background: #f8f8f8;
  border-radius: 8px;
  margin: 2rem;
}

.error-boundary h2 {
  color: #e74c3c;
  margin-bottom: 1rem;
}

.error-boundary p {
  color: #666;
  margin-bottom: 1rem;
}

/* Toast notification styles */
.toast {
  position: fixed;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  background: var(--harvest-brown);
  color: white;
  padding: 1rem 2rem;
  border-radius: 8px;
  z-index: var(--z-tooltip);
  box-shadow: var(--shadow-xl);
  animation: toastSlideIn 0.3s ease-out;
}

.toast.success {
  background: #27ae60;
}

.toast.error {
  background: #e74c3c;
}

.toast.warning {
  background: #f39c12;
}

@keyframes toastSlideIn {
  from {
    transform: translateX(-50%) translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateX(-50%) translateY(0);
    opacity: 1;
  }
}

/* Custom checkbox and radio styles */
.custom-checkbox,
.custom-radio {
  display: none;
}

.custom-checkbox + label,
.custom-radio + label {
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  user-select: none;
}

.custom-checkbox + label::before,
.custom-radio + label::before {
  content: '';
  display: inline-block;
  width: 20px;
  height: 20px;
  border: 2px solid var(--autumn-orange);
  margin-right: 0.5rem;
  transition: all var(--transition-normal);
}

.custom-checkbox + label::before {
  border-radius: 4px;
}

.custom-radio + label::before {
  border-radius: 50%;
}

.custom-checkbox:checked + label::before {
  background: var(--autumn-orange);
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m13.854 3.646-7.5 7.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6 10.293l7.146-7.147a.5.5 0 0 1 .708.708z'/%3E%3C/svg%3E");
  background-size: 12px;
  background-position: center;
  background-repeat: no-repeat;
}

.custom-radio:checked + label::before {
  background: var(--autumn-orange);
  box-shadow: inset 0 0 0 4px white;
}

/* Utility classes for common patterns */
.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

.text-center { text-align: center; }
.text-left { text-align: left; }
.text-right { text-align: right; }

.font-cursive { font-family: var(--font-cursive); }
.font-serif { font-family: var(--font-serif); }

.color-orange { color: var(--autumn-orange); }
.color-brown { color: var(--harvest-brown); }
.color-cream { color: var(--cream); }

.bg-orange { background-color: var(--autumn-orange); }
.bg-brown { background-color: var(--harvest-brown); }
.bg-cream { background-color: var(--cream); }

.shadow-sm { box-shadow: var(--shadow-sm); }
.shadow-md { box-shadow: var(--shadow-md); }
.shadow-lg { box-shadow: var(--shadow-lg); }
.shadow-xl { box-shadow: var(--shadow-xl); }

.rounded { border-radius: var(--border-radius); }
.rounded-lg { border-radius: var(--border-radius-lg); }
.rounded-xl { border-radius: var(--border-radius-xl); }

.mt-0 { margin-top: 0; }
.mt-1 { margin-top: var(--spacing-xs); }
.mt-2 { margin-top: var(--spacing-sm); }
.mt-4 { margin-top: var(--spacing-md); }
.mt-8 { margin-top: var(--spacing-lg); }

.mb-0 { margin-bottom: 0; }
.mb-1 { margin-bottom: var(--spacing-xs); }
.mb-2 { margin-bottom: var(--spacing-sm); }
.mb-4 { margin-bottom: var(--spacing-md); }
.mb-8 { margin-bottom: var(--spacing-lg); }

.p-0 { padding: 0; }
.p-1 { padding: var(--spacing-xs); }
.p-2 { padding: var(--spacing-sm); }
.p-4 { padding: var(--spacing-md); }
.p-8 { padding: var(--spacing-lg); }// ===== src/main.jsx =====
import React from 'react'
import ReactDOM from 'react-dom/client'
import { HelmetProvider } from 'react-helmet-async'
import App from './App.jsx'
import './styles/globals.css'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <HelmetProvider>
      <App />
    </HelmetProvider>
  </React.StrictMode>,
)
